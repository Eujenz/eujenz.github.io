# 這個 workflow 用來構建並部署 Hugo 網站到 GitHub Pages
name: Deploy Hugo site to Pages

on:
  # 當推送到 main 分支時觸發此工作流
  push:
    branches: ["main"]

  # 允許從 GitHub Actions 手動觸發此工作流
  workflow_dispatch:

# 設置 GITHUB_TOKEN 權限來允許部署到 GitHub Pages
permissions:
  contents: read        # 讀取 repository 的內容
  pages: write          # 寫入 GitHub Pages 部署權限
  id-token: write       # 寫入身份驗證 token 的權限

# 允許一次只有一個部署過程進行，避免並發部署問題
concurrency:
  group: "pages"
  cancel-in-progress: false  # 不會取消進行中的部署，允許其完成

# 預設 shell 設置為 bash
defaults:
  run:
    shell: bash

jobs:
  # 第一個 Job: 構建網站
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 環境來運行任務
    env:
      HUGO_VERSION: 0.128.0  # 定義要安裝的 Hugo 版本
    steps:
      # 下載並安裝 Hugo
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # 安裝 Dart Sass，用來編譯 SCSS/Sass 樣式文件
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      # 檢出最新的代碼並拉取子模塊
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 檢出所有子模塊

      # 配置 GitHub Pages 部署環境
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # 安裝 Node.js 依賴項（如果有 package-lock.json）
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      # 使用 Hugo 構建網站
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache  # 設置 Hugo 的緩存目錄
          HUGO_ENVIRONMENT: production  # 設置 Hugo 為生產環境
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"  # 設置部署網站的 base URL

      # 上傳構建好的靜態網站作為 artifact（將靜態文件打包並保存）
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public  # 上傳 public 資料夾中生成的靜態網站文件

  # 第二個 Job: 部署到 GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}  # 部署完成後的頁面 URL
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 環境運行部署任務
    needs: build  # 依賴於 "build" 任務成功完成
    steps:
      # 部署靜態網站到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
